import { IApplyTypesOptions } from './apply-types';
import { ICompilerOptions } from './compiler-helper';
import { IInstrumentOptions } from './instrument';
export interface ITypewizConfigFile {
    common?: Partial<ICompilerOptions>;
    instrument?: Partial<IInstrumentOptions>;
    applyTypes?: Partial<IApplyTypesOptions>;
}
export declare class ConfigurationParser {
    private typewizConfig;
    private configurationPath?;
    findConfigFile(cwd: string): string | undefined;
    parse(configurationPath: string): Promise<void>;
    parseSync(configurationPath: string): void;
    getCompilerOptions(): ICompilerOptions;
    getInstrumentOptions(): IInstrumentOptions;
    getApplyTypesOptions(): IApplyTypesOptions;
    private parseConfig;
}
